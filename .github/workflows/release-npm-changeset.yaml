name: "Release"

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_VERSION: ""

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      is_changeset_pr: ${{ steps.check-commit.outputs.is_changeset_pr }}
    steps:
      - uses: actions/checkout@v4
      - name: Check commit message
        id: check-commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == "ci(changesets): versioning packages"* ]]; then
            echo "is_changeset_pr=true" >> $GITHUB_OUTPUT
          else
            echo "is_changeset_pr=false" >> $GITHUB_OUTPUT
          fi

  create-pr:
    needs: check-commit
    if: needs.check-commit.outputs.is_changeset_pr == 'false'
    runs-on: ubuntu-latest
    environment: npm-deploy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Extract pnpm version from .tool-versions
        id: get_pnpm
        run: |
          PNPM_VERSION=$(grep '^pnpm' .tool-versions | awk '{print $2}')
          echo "PNPM_VERSION=${PNPM_VERSION}" >> $GITHUB_ENV
      - uses: FuelLabs/github-actions/setups/node@master
        with:
          node-version: 20.11.0
          pnpm-version: ${{  env.PNPM_VERSION }}
      - uses: FuelLabs/github-actions/setups/npm@master
        with:
          npm-token: ${{ secrets.NPM_TOKEN_WALLET }}

      - name: Setup git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create Changeset PR
        uses: FuelLabs/changesets-action@v2.0.0
        with:
          commit: "ci(changesets): versioning packages"
          title: "ci(changesets): versioning packages"
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

  publish-npm:
    needs: check-commit
    if: needs.check-commit.outputs.is_changeset_pr == 'true'
    runs-on: ubuntu-latest
    environment: npm-deploy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Extract pnpm version from .tool-versions
        id: get_pnpm
        run: |
          PNPM_VERSION=$(grep '^pnpm' .tool-versions | awk '{print $2}')
          echo "PNPM_VERSION=${PNPM_VERSION}" >> $GITHUB_ENV
      - uses: FuelLabs/github-actions/setups/node@master
        with:
          node-version: 20.11.0
          pnpm-version: ${{  env.PNPM_VERSION }}
      - uses: FuelLabs/github-actions/setups/npm@master
        with:
          npm-token: ${{ secrets.NPM_TOKEN_WALLET }}

      - name: Bump and Collect Version
        run: |
          pnpm changeset version
          echo "BUILD_VERSION=$(pnpm -s packages:version)" >> $GITHUB_ENV
          git reset --hard
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build packages
        run: pnpm build:libs

      - name: Publish to NPM
        id: publish
        uses: FuelLabs/changesets-action@v2.0.0
        with:
          publish: pnpm changeset publish --tag next
          createGithubReleases: aggregate
          githubReleaseName: v${{ env.BUILD_VERSION }}
          githubTagName: v${{ env.BUILD_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Fuel Wallet
        if: steps.publish.outputs.published == 'true'
        run: pnpm build:crx
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Build Fuel Wallet Development
        if: steps.publish.outputs.published == 'true'
        run: pnpm build:crx
        env:
          VITE_CRX_RELEASE: false
          VITE_CRX_NAME: "Fuel Wallet Development"
          CRX_OUT: "dist-crx-dev"
          APP_VERSION_POSTFIX: "-development"
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Upload Production artifacts to Sentry
        if: steps.publish.outputs.published == 'true'
        run: |
          pnpm sentry-cli sourcemaps inject --release ${{ env.BUILD_VERSION }} ./dist-crx
          pnpm sentry-cli sourcemaps upload --release ${{ env.BUILD_VERSION }} ./dist-crx
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        working-directory: ./packages/app

      - name: Upload Development artifacts to Sentry
        if: steps.publish.outputs.published == 'true'
        run: |
          pnpm sentry-cli sourcemaps inject --release ${{ env.BUILD_VERSION }} ./dist-crx-dev
          pnpm sentry-cli sourcemaps upload --release ${{ env.BUILD_VERSION }} ./dist-crx-dev
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
        working-directory: ./packages/app

      - name: Attach Fuel Wallet to release
        if: steps.publish.outputs.published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ env.BUILD_VERSION }}
          files: |
            ./packages/app/dist/*.zip
