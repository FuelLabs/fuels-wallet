name: "PR Checks"

on:
  pull_request:
    types: [opened, synchronize, edited, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  COVERAGE_FILE: ./coverage/report.json

jobs:
  validate-title:
    name: Validate PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - run: pnpm audit --prod

  lint:
    name: Lint & Test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: Run lint
        run: |
          pnpm ts:check
          pnpm lint
          pnpm test:ci --outputFile="${{ env.COVERAGE_FILE }}"

      - name: Run tests with coverage
        uses: artiomtr/jest-coverage-report-action@v2.0.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          package-manager: pnpm
          annotations: failed-tests
          test-script: pnpm test:ci
          prnumber: ${{ steps.findPr.outputs.number }}
          skip-test: all
          working-directory: ./packages/app
          coverage-file: ${{ env.COVERAGE_FILE }}
          base-coverage-file: ${{ env.COVERAGE_FILE }}

  end-to-end-test:
    name: Test E2E
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/setup-docker
        with:
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "End-to-end tests"
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          install: false
          command: pnpm ci:test-e2e
          record: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: "test"
